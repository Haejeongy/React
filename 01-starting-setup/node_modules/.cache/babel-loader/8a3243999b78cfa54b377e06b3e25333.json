{"ast":null,"code":"var _jsxFileName = \"/Users/haejeongyang/Desktop/Codestates practice/React/01-starting-setup/src/NewExpense/ExpenseForm.js\";\nimport React from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  const titleChangeHandler = event => {\n    console.log(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2022-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseForm;\nexport default ExpenseForm; // 리액트에서 event.target.value를 쓰는 이유 (드디어.. 드디어..!!)\n// 우리가 event를 쓰려고 하는 이유는,\n// 사용자가 어떤 값을 input값에 넣었는지 알고, 그 값을 가져오고 싶어서인데,\n// react 자체에 혹은 브라우저 자체에서 event라는 객체를 사용할 수 있게 해줍니다.\n// 언제? 우리가 \"함수\"를 사용할 때! 함수에 매개변수로 event를 넣으면 바로 사용할 수 있음\n// 이벤트 객체를 살펴보면, event에 target이라는 필드 있습니다.\n// 이 target은 이벤트가 일어나는 dom요소를 가르키는데, (=input)\n// 그 안에 value라는 값을 찾아보면 거기에 사용자가 쓴 데이터가 들어있습니다\n// console.log(event)로 확인해보세요\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","ExpenseForm","titleChangeHandler","event","console","log","target","value"],"sources":["/Users/haejeongyang/Desktop/Codestates practice/React/01-starting-setup/src/NewExpense/ExpenseForm.js"],"sourcesContent":["import React from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = () => {\n  const titleChangeHandler = (event) => {\n    console.log(event.target.value);\n  };\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__controls\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2022-01-01\" max=\"2022-12-31\" />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n\n// 리액트에서 event.target.value를 쓰는 이유 (드디어.. 드디어..!!)\n// 우리가 event를 쓰려고 하는 이유는,\n// 사용자가 어떤 값을 input값에 넣었는지 알고, 그 값을 가져오고 싶어서인데,\n// react 자체에 혹은 브라우저 자체에서 event라는 객체를 사용할 수 있게 해줍니다.\n// 언제? 우리가 \"함수\"를 사용할 때! 함수에 매개변수로 event를 넣으면 바로 사용할 수 있음\n// 이벤트 객체를 살펴보면, event에 target이라는 필드 있습니다.\n// 이 target은 이벤트가 일어나는 dom요소를 가르키는데, (=input)\n// 그 안에 value라는 값을 찾아보면 거기에 사용자가 쓴 데이터가 들어있습니다\n// console.log(event)로 확인해보세요\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IACpCC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEL;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,QAAZ;UAAqB,GAAG,EAAC,MAAzB;UAAgC,IAAI,EAAC;QAArC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,GAAG,EAAC,YAAvB;UAAoC,GAAG,EAAC;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAzBD;;KAAMD,W;AA2BN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}
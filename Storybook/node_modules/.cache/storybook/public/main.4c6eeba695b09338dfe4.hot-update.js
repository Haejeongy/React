webpackHotUpdate("main",{

/***/ "./stories/Title.stories.js":
/*!**********************************!*\
  !*** ./stories/Title.stories.js ***!
  \**********************************/
/*! exports provided: default, RedTitle, BlueTitle, GreenTitle */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedTitle", function() { return RedTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlueTitle", function() { return BlueTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreenTitle", function() { return GreenTitle; });
/* harmony import */ var _Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var _Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/core-js/modules/es.function.bind.js */ "./node_modules/core-js/modules/es.function.bind.js");
/* harmony import */ var _Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_haejeongyang_Desktop_Codestates_practice_React_Storybook_node_modules_core_js_modules_es_function_bind_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Title__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Title */ "./stories/Title.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "../../../../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);



/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "// 앞에서 작성한 컴포넌트를 불러옵니다.\nimport Title from \"./Title\";\n\n// title : 컴포넌트 이름으로, '/'를 넣어 카테고리화 할 수 있습니다.\n//         이후 예시에서 조금 더 자세히 설명합니다.\n// component : 어떤 컴포넌트를 가져와서 스토리로 만들 것인지 명시합니다.\n// argTypes : 컴포넌트에 필요한 전달인자의 종류와 타입을 정해줍니다.\n//            지금은 title, textColor이라는 전달인자에 text 타입이 필요함을 의미합니다.\nexport default {\n    title: \"Practice/Title\", \n    component: Title,\n    argTypes: {\n        title: { control: \"text\" },\n        textColor: {control: \"text\"}\n    }\n}\n\n// 템플릿을 만들어줍니다. 이 템플릿에서는\n// Title 컴포넌트가 args를 전달받아 props로 내려줍니다.\nconst Template = (args) => <Title {...args} />\n\n// Storybook에서 확인하고 싶은 컴포넌트는 export const로 작성합니다.\n// 템플릿을 사용하여 Storybook에 넣어줄 스토리를 하나 만들어주었습니다.\n// Template.bins({}); 는 정해진 문법이라고 생각하고 사용하시면 됩니다.\nexport const RedTitle = Template.bind({});\n\n// 만들어준 스토리의 전달인자를 작성해줍니다.\nRedTitle.args= {\n    title: \"Red Title\",\n    textColor: \"red\"\n}\n\n// 스토리를 하나 더 만듭니다.\nexport const BlueTitle = Template.bind({});\n\n// 스토리의 전달인자를 작성해줍니다.\nBlueTitle.args= {\n    title: \"Blue Title\",\n    textColor: \"blue\"\n}\n\nexport const GreenTitle = Template.bind({});\nGreenTitle.args= {\n    title: \"멋땨용\",\n    textColor: \"g\"\n}"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "RedTitle": {
    "startLoc": {
      "col": 17,
      "line": 20
    },
    "endLoc": {
      "col": 46,
      "line": 20
    },
    "startBody": {
      "col": 17,
      "line": 20
    },
    "endBody": {
      "col": 46,
      "line": 20
    }
  },
  "BlueTitle": {
    "startLoc": {
      "col": 17,
      "line": 20
    },
    "endLoc": {
      "col": 46,
      "line": 20
    },
    "startBody": {
      "col": 17,
      "line": 20
    },
    "endBody": {
      "col": 46,
      "line": 20
    }
  },
  "GreenTitle": {
    "startLoc": {
      "col": 17,
      "line": 20
    },
    "endLoc": {
      "col": 46,
      "line": 20
    },
    "startBody": {
      "col": 17,
      "line": 20
    },
    "endBody": {
      "col": 46,
      "line": 20
    }
  }
}; // 앞에서 작성한 컴포넌트를 불러옵니다.

 // title : 컴포넌트 이름으로, '/'를 넣어 카테고리화 할 수 있습니다.
//         이후 예시에서 조금 더 자세히 설명합니다.
// component : 어떤 컴포넌트를 가져와서 스토리로 만들 것인지 명시합니다.
// argTypes : 컴포넌트에 필요한 전달인자의 종류와 타입을 정해줍니다.
//            지금은 title, textColor이라는 전달인자에 text 타입이 필요함을 의미합니다.


/* harmony default export */ __webpack_exports__["default"] = ({
  title: "Practice/Title",
  component: _Title__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"],
  argTypes: {
    title: {
      control: "text"
    },
    textColor: {
      control: "text"
    }
  }
}); // 템플릿을 만들어줍니다. 이 템플릿에서는
// Title 컴포넌트가 args를 전달받아 props로 내려줍니다.

var Template = function Template(args) {
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["jsx"])(_Title__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], Object.assign({}, args));
};

Template.displayName = "Template";
// Storybook에서 확인하고 싶은 컴포넌트는 export const로 작성합니다.
// 템플릿을 사용하여 Storybook에 넣어줄 스토리를 하나 만들어주었습니다.
// Template.bins({}); 는 정해진 문법이라고 생각하고 사용하시면 됩니다.
var RedTitle = Template.bind({});
; // 만들어준 스토리의 전달인자를 작성해줍니다.

RedTitle.args = {
  title: "Red Title",
  textColor: "red"
}; // 스토리를 하나 더 만듭니다.

var BlueTitle = Template.bind({});
; // 스토리의 전달인자를 작성해줍니다.

BlueTitle.args = {
  title: "Blue Title",
  textColor: "blue"
};
var GreenTitle = Template.bind({});
GreenTitle.args = {
  title: "멋땨용",
  textColor: "g"
};
RedTitle.parameters = Object.assign({
  storySource: {
    source: "(args) => <Title {...args} />"
  }
}, RedTitle.parameters);
BlueTitle.parameters = Object.assign({
  storySource: {
    source: "(args) => <Title {...args} />"
  }
}, BlueTitle.parameters);
GreenTitle.parameters = Object.assign({
  storySource: {
    source: "(args) => <Title {...args} />"
  }
}, GreenTitle.parameters);

/***/ })

})
//# sourceMappingURL=main.4c6eeba695b09338dfe4.hot-update.js.map
{"version":3,"file":"main.58786fdce74eae946cb4.hot-update.js","sources":["webpack:///./stories/Title.js","webpack:///./stories/Title.stories.js"],"sourcesContent":["import React from \"react\";\n\nconst Title = ({title, textColor}) => (\n    <h1 style = {{color: textColor}}>{title}</h1>\n);\n\nexport default Title;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"// 앞에서 작성한 컴포넌트를 불러옵니다.\\nimport Title from \\\"./Title\\\";\\n\\n// title : 컴포넌트 이름으로, '/'를 넣어 카테고리화 할 수 있습니다.\\n//         이후 예시에서 조금 더 자세히 설명합니다.\\n// component : 어떤 컴포넌트를 가져와서 스토리로 만들 것인지 명시합니다.\\n// argTypes : 컴포넌트에 필요한 전달인자의 종류와 타입을 정해줍니다.\\n//            지금은 title, textColor이라는 전달인자에 text 타입이 필요함을 의미합니다.\\nexport default {\\n    title: \\\"Practice/Title\\\", \\n    component: Title,\\n    argTypes: {\\n        title: { control: \\\"text\\\" },\\n        textColor: {control: \\\"text\\\"}\\n    }\\n}\\n\\n// 템플릿을 만들어줍니다. 이 템플릿에서는\\n// Title 컴포넌트가 args를 전달받아 props로 내려줍니다.\\nconst Template = (args) => <Title {...args} />\\n\\n// Storybook에서 확인하고 싶은 컴포넌트는 export const로 작성합니다.\\n// 템플릿을 사용하여 Storybook에 넣어줄 스토리를 하나 만들어주었습니다.\\n// Template.bins({}); 는 정해진 문법이라고 생각하고 사용하시면 됩니다.\\nexport const RedTitle = Template.bind({});\\n\\n// 만들어준 스토리의 전달인자를 작성해줍니다.\\nRedTitle.args= {\\n    title: \\\"Red Title\\\",\\n    textColor: \\\"red\\\"\\n}\\n\\n// 스토리를 하나 더 만듭니다.\\nexport const BlueTitle = Template.bind({});\\n\\n// 스토리의 전달인자를 작성해줍니다.\\nBlueTitle.args= {\\n    title: \\\"Blue Title\\\",\\n    textColor: \\\"blue\\\"\\n}\\n\\nexport const GreenTitle = Template.bind({});\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"RedTitle\":{\"startLoc\":{\"col\":17,\"line\":20},\"endLoc\":{\"col\":46,\"line\":20},\"startBody\":{\"col\":17,\"line\":20},\"endBody\":{\"col\":46,\"line\":20}},\"BlueTitle\":{\"startLoc\":{\"col\":17,\"line\":20},\"endLoc\":{\"col\":46,\"line\":20},\"startBody\":{\"col\":17,\"line\":20},\"endBody\":{\"col\":46,\"line\":20}},\"GreenTitle\":{\"startLoc\":{\"col\":17,\"line\":20},\"endLoc\":{\"col\":46,\"line\":20},\"startBody\":{\"col\":17,\"line\":20},\"endBody\":{\"col\":46,\"line\":20}}};\n    \n// 앞에서 작성한 컴포넌트를 불러옵니다.\nimport Title from \"./Title\";\n\n// title : 컴포넌트 이름으로, '/'를 넣어 카테고리화 할 수 있습니다.\n//         이후 예시에서 조금 더 자세히 설명합니다.\n// component : 어떤 컴포넌트를 가져와서 스토리로 만들 것인지 명시합니다.\n// argTypes : 컴포넌트에 필요한 전달인자의 종류와 타입을 정해줍니다.\n//            지금은 title, textColor이라는 전달인자에 text 타입이 필요함을 의미합니다.\nexport default {\n    title: \"Practice/Title\", \n    component: Title,\n    argTypes: {\n        title: { control: \"text\" },\n        textColor: {control: \"text\"}\n    }\n}\n\n// 템플릿을 만들어줍니다. 이 템플릿에서는\n// Title 컴포넌트가 args를 전달받아 props로 내려줍니다.\nconst Template = (args) => <Title {...args} />\n\n// Storybook에서 확인하고 싶은 컴포넌트는 export const로 작성합니다.\n// 템플릿을 사용하여 Storybook에 넣어줄 스토리를 하나 만들어주었습니다.\n// Template.bins({}); 는 정해진 문법이라고 생각하고 사용하시면 됩니다.\nexport const RedTitle = Template.bind({});;\n\n// 만들어준 스토리의 전달인자를 작성해줍니다.\nRedTitle.args= {\n    title: \"Red Title\",\n    textColor: \"red\"\n}\n\n// 스토리를 하나 더 만듭니다.\nexport const BlueTitle = Template.bind({});;\n\n// 스토리의 전달인자를 작성해줍니다.\nBlueTitle.args= {\n    title: \"Blue Title\",\n    textColor: \"blue\"\n}\n\nexport const GreenTitle = Template.bind({});\n\n\nRedTitle.parameters = { storySource: { source: \"(args) => <Title {...args} />\" }, ...RedTitle.parameters };\nBlueTitle.parameters = { storySource: { source: \"(args) => <Title {...args} />\" }, ...BlueTitle.parameters };\nGreenTitle.parameters = { storySource: { source: \"(args) => <Title {...args} />\" }, ...GreenTitle.parameters };"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AADA;;;;;;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAHA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
// <hr /> 
// HTML에서 가로줄을 생성해주고, 문단을 구분하는데 사용됩니다.
// css으로 스타일을 적용 해 줄 수 있음 (boarder, color, width, height...)


// 리액트 데이터 저장하는 방법
// 1. { 변수 } 2. state

// how to use state
// import { useState } -> 리액트에 있는 내장 함수를 하나 쓰겠습니다. 이름은 useState...
// 이제 useState 함수를 써서 데이터를 저장해준다!
// useState 함수는 배열값을 리턴하는데, 
// [a(데이터),b(데이터 정정해주는 함수)] 를 리턴한다.
// 그리고 각각을 구조분해할당으로 변수 할당

// why use state?
// 변수를 쓰면, 파일 내에서 변경을 해주고 새로고침을 해줘야 하는데,
// 스테이트를 쓰면, 사용자가 인터페이스 안에서 변경이 가능하고,
// 데이터 정정해주는 함수가 값을 바꿔 html을 자동으로 재랜더링을 해준다.

//ES6 destructuring 문법 = 구조분해할당
//배열 각각의 값에 변수를 할당해주고 싶을 때 사용한다
//let [a,b] = [10, 100];
//a = 10, b = 100; 이 됩니다.

//근데 왜 let [subject, setSubject] = useState(['리액트','자바스크립트']) 
// 둘다 subject로 들어가는걸까?
// useState([]) 은 초기값이기 때문에, 배열 자체가 subject로 들어가, 하나의 스트링으로 보여지게 되는 것
// useState()<- 안에는 문자, 숫자, array, object 모두 저장 가능
// 부르는 것도 각 속성값에 접근하는 것처럼 접근하면 된다.